import java.io.File;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

import org.apache.commons.io.FileUtils;
import org.jsoup.nodes.Document;
import org.jsoup.select.Elements;

public class Control {
	public static void query(String query, String loc, String ftype) {
		PageTools.verifyHTTPS("www.maps.google.com");
		int R = PageTools.results(query);
		Document[] doc = new Document[1];
		// System.out.println(doc.length);
		try {
			for (int i = 0; i < doc.length; i++) {
				doc[i] = PageTools.getMapResults(query, i * 10);
			}
		} catch (IOException e) {
			JOptionPane.showMessageDialog(null, e.getLocalizedMessage());
		}

		switch (ftype) {
		case "Excel":
			try {
				toExcel(doc, loc, query);
			} catch (Exception e) {
				JOptionPane
						.showMessageDialog(null,
								"Error! One or more results may be missing information");
				break;
			}
		case "HTML":
			try {
				toHTML(doc, loc, query);
			} catch (Exception e) {
				JOptionPane
						.showMessageDialog(null,
								"Error! One or more results may be missing information\n");
				e.printStackTrace();
				break;
			}
		default:
			JOptionPane.showMessageDialog(null, "Successfuly saved to " + loc
					+ " as " + ftype + " document!");
		}

	}

	private static void toHTML(Document[] doc, String loc, String query) {
		int rank = 1;

		String str = "<table border=\"2\">\n"
				+ "<tr>\n<td><b>Rank:</b></td><td><b>Name:</b></td><td><b>Number:</b></td><td><b>Address:</b></td><td><b>Site:</b></td>\n</tr>\n";
		for (int n = 0; n < doc.length; n++) {
			Elements div = doc[n].select(PageTools.MAP_DIV);
			Elements numbers = div.select(PageTools.MAP_TELE_TAG)
					.select("nobr");
			Elements names = div.select(PageTools.MAP_NAME_TAG);
			Elements address = div.select(PageTools.MAP_ADDR_TAG);

			for (int i = 0; i < names.size(); i++) {
				if (names.get(i).toString().contains("href")) {
					// System.out.println(names.get(i));
					names.remove(i);
					i--;
				}
			}

			for (int i = 0; i < names.size(); i++) {
				str += "<tr>\n";
				str += "<td>" + (rank) + "</td>\n";
				str += "<td>" + names.get(i).text() + "</td>\n";
				str += "<td>" + numbers.get(i).text() + "</td>\n";
				String adr = address.get(i).text();
				str += "<td>" + adr.substring(0, adr.length() - 2) + "</td>\n";
				str += "<td>"
						+ /* PageTools.getSite(names.get(i).text()) */"Eh"
						+ "</td>";
				str += "</tr>\n";
				rank++;
			}
		}
		str += "</table>\n<br />\n<b>Report generated by Juzer Nomani's Google Scrapper</b>";

		try {
			FileUtils.write(new File(loc
					+ (!loc.endsWith(".html") ? ".html" : "")), str);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	private static void toExcel(Document doc[], String loc, String query) {
		int rank = 1;
		String str = "Rank, Place, Number, Address\n";
		for (int n = 0; n < doc.length; n++) {
			Elements div = doc[n].select(PageTools.MAP_DIV);
			Elements numbers = div.select(PageTools.MAP_TELE_TAG)
					.select("nobr");
			Elements names = div.select(PageTools.MAP_NAME_TAG);
			Elements address = div.select(PageTools.MAP_ADDR_TAG);
			// Elements sites =
			// div.select("span[class=pp-headline-item pp-headline-authority-page]");

			for (int i = 0; i < names.size(); i++) {
				if (names.get(i).toString().contains("href")) {
					// System.out.println(names.get(i));
					names.remove(i);
					i--;
				}
			}

			for (int i = 0; i < names.size(); i++) {

				str += (rank) + ", " + names.get(i).text().replaceAll(",", "")
						+ ", " + numbers.get(i).text() + ", ";
				String adr = address.get(i).text().replaceAll(",", " ");
				str += adr.substring(0, adr.length() - 2) + "\n";
				rank++;
			}
			try {
				System.out.print("Document " + n + " successfully scrapped.");
				Thread.sleep(10);
			} catch (Exception e) {

			}
		}

		try {
			FileUtils.write(new File(loc
					+ (!loc.endsWith(".csv") ? ".csv" : "")), str);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public static void main(String[] ar) throws ClassNotFoundException,
			InstantiationException, IllegalAccessException,
			UnsupportedLookAndFeelException {
		UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());

		new View();
	}

}
